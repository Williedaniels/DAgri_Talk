# =============================================================================
# D'Agri Talk - QA Environment Docker Compose Configuration
# =============================================================================

services:
  # MongoDB Database (QA)
  mongodb:
    image: mongo:4.4
    platform: linux/amd64
    container_name: dagri-talk-mongodb-qa
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: dagri_talk_qa
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - dagri-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  # Flask Backend API (QA)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: dagri-talk-backend-qa
    env_file:
      - .env.qa
    environment:
      - FLASK_ENV=production
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/dagri_talk_qa?authSource=admin
    volumes:
      - backend_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - dagri-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped

  # React Frontend (QA)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-/api}
    container_name: dagri-talk-frontend-qa
    env_file:
      - .env.qa
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - dagri-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped

# QA volumes for data persistence
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_logs:
    driver: local

# QA network for service communication
networks:
  dagri-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16